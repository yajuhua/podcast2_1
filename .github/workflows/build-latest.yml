name: v2 Build Latest Images
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        type: string


jobs:
  build-UI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: build UI
        run: |
          cd ui
          npm install @vue/cli-service @vue/cli-plugin-babel @vue/cli-plugin-eslint @vue/cli-plugin-router
          npm run build
          ls 

      - name: Upload UI artifact
        uses: actions/upload-artifact@v3
        with:
          name: UI
          path: ui/dist/  # 上传 dist 目录

  build-jar:
    runs-on: ubuntu-latest
    needs: build-UI

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: UI
          path: src/main/resources/static/

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn package -Dpodcast2Version=$version
        env:
          version: ${{ inputs.version }}
      - name: Upload jar artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: target/  # 上传 target 目录

  build-amd64:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - uses: actions/checkout@v3
      - name: Download jar artifact
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: .

      # 设置 QEMU, 后面 docker buildx 依赖此.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # 设置 Docker buildx, 方便构建 Multi platform 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          # GitHub Repo => Settings => Secrets 增加 docker hub 登录密钥信息
          # DOCKERHUB_USERNAME 是 docker hub 账号名.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security 创建.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      # 构建 amd64 Docker镜像
      - name: Build the amd64 Docker image
        run: |
          docker build . --file Dockerfile --tag yajuhua/podcast2:amd64-$version --platform linux/amd64
          docker push yajuhua/podcast2:amd64-$version
        env:
          version: ${{ inputs.version }}

  build-arm64:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - uses: actions/checkout@v3
        with:
          arch: aarch64

      - name: Download jar artifact
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: .

      # 设置 QEMU, 后面 docker buildx 依赖此.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # 设置 Docker buildx, 方便构建 Multi platform 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          # GitHub Repo => Settings => Secrets 增加 docker hub 登录密钥信息
          # DOCKERHUB_USERNAME 是 docker hub 账号名.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security 创建.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      # 构建 arm64 Docker镜像
      - name: Build the arm64 Docker image
        run: |
          docker build . --file Dockerfile --tag yajuhua/podcast2:arm64-$version --platform linux/arm64
          docker push yajuhua/podcast2:arm64-$version
        env:
          version: ${{ inputs.version }}

  build-arm32v7:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - uses: actions/checkout@v3
        with:
          arch: armv7

      - name: Download jar artifact
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: .

      # 设置 QEMU, 后面 docker buildx 依赖此.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # 设置 Docker buildx, 方便构建 Multi platform 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          # GitHub Repo => Settings => Secrets 增加 docker hub 登录密钥信息
          # DOCKERHUB_USERNAME 是 docker hub 账号名.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security 创建.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      # 构建 arm32v7 Docker镜像
      - name: Build the arm32v7 Docker image
        run: |
          docker build . --file Dockerfile --tag yajuhua/podcast2:arm32v7-$version --platform linux/arm/v7
          docker push yajuhua/podcast2:arm32v7-$version
        env:
          version: ${{ inputs.version }}


  push-docker-hub:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ build-arm64,build-amd64,build-arm32v7]
    steps:
      # 设置 QEMU, 后面 docker buildx 依赖此.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # 设置 Docker buildx, 方便构建 Multi platform 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: pull amd4 and arm64 docker images
        run: |
          docker pull yajuhua/podcast2:arm64-$version
          docker pull yajuhua/podcast2:amd64-$version
          docker pull yajuhua/podcast2:arm32v7-$version
        env:
          version: ${{ inputs.version }}
      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          # GitHub Repo => Settings => Secrets 增加 docker hub 登录密钥信息
          # DOCKERHUB_USERNAME 是 docker hub 账号名.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security 创建.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      - name: create manifest
        run: |
          docker manifest create yajuhua/podcast2:$version yajuhua/podcast2:arm64-$version yajuhua/podcast2:amd64-$version yajuhua/podcast2:arm32v7-$version
          docker manifest create yajuhua/podcast2:latest yajuhua/podcast2:arm64-$version yajuhua/podcast2:amd64-$version yajuhua/podcast2:arm32v7-$version
        env:
          version: ${{ inputs.version }}
      - name: push manifest
        run: |
          docker manifest push yajuhua/podcast2:$version
          docker manifest push yajuhua/podcast2:latest
        env:
          version: ${{ inputs.version }}

  build-installation-package:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - uses: actions/checkout@v3

      - name: Create tmp directory
        run: |
          mkdir tmp
      - name: Download jar artifact
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: tmp/

      - name: Build windows
        run: |
          ls
          cp tmp/app.jar .
          unzip tmp/app.jar
          curl -L -o platform/windows/yt-dlp.exe https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe
          cp -rf BOOT-INF/classes BOOT-INF/lib platform/windows/
          zip -r podcast2-win-x64.zip platform/windows/ 
          md5sum podcast2-win-x64.zip >> md5.txt

      - name: Build osx
        run: |
          curl -L -o platform/osx/yt-dlp "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos_legacy"
          chmod a+x platform/osx/yt-dlp
          cp -rf BOOT-INF/classes BOOT-INF/lib platform/osx/
          zip -r podcast2-osx-x64.zip platform/osx/ 
          md5sum podcast2-osx-x64.zip >> md5.txt
          md5sum app.jar >> md5.txt

      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ inputs.version }}"
          title: "${{ inputs.version }}"
          files: |
            podcast2-win-x64.zip
            podcast2-osx-x64.zip
            app.jar
            md5.txt
  # 更新信息
  update-info:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [build-installation-package,push-docker-hub]
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update pom.xml
        run: |
          sed -i "s/^\([[:space:]]*\)<podcast2Version>.*<\/podcast2Version>/\1<podcast2Version>$version<\/podcast2Version>/" pom.xml
        env:
          version: ${{ inputs.version }}

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Release $version" || echo "No changes to commit"
          git push
        env:
          version: ${{ inputs.version }}